description: creates a google cloud platform virtual private cloud (if it doesn't exist)
inputs:
  bgpRoutingMode:
    string:
      default: regional
      description: "The BGP routing mode for this vpc.
        global: cloud Routers in this network advertise subnetworks from all regions to their BGP peers, and program instances in all regions with the router's best learned BGP routes.
        regional: Cloud Routers in this network advertise subnetworks from their local region only to their BGP peers, and program instances in their local region only with the router's best learned BGP routes."
      constraints: {enum: [ global, regional ]}
  description:
    string:
      default: ' '
      description: optional, textual description for the vpc
      constraints: {minLength: 1}
  keyFile:
    string:
      description: key file for a GCP service account w/ `Compute Network Admin` role
      isSecret: true
  name:
    string:
      description: name of provisioned vpc
      constraints: {minLength: 1}
  projectId:
    string:
      description: id of the GCP project containing the vpc
      constraints: {minLength: 1}
  range:
    string:
      default: ' '
      description: "the IPv4 address range of legacy mode vpc's. 
        The range must be specified in CIDR format: http://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing
        This flag only works if mode is legacy"
      constraints: {minLength: 1}
  subnetMode:
    string:
      default: auto
      description: "The subnet mode of the vpc
        auto: Subnets are created automatically. This is the recommended selection.
        custom: Create subnets manually.
        legacy: Create an old style network that has a range and cannot have subnets. This is not recommended for new vpc's"
      constraints: {enum: [ auto, custom, legacy ]}
name: github.com/opspec-pkgs/gcp.compute.networks.create
opspec: 0.1.6
run:
  serial:
    # ensure service enabled
    - op:
        ref: github.com/opspec-pkgs/gcp.services.enable#1.0.0
        inputs:
          keyFile:
          projectId:
          service: compute.googleapis.com
    - container:
        image: { ref: 'google/cloud-sdk:229.0.0-alpine' }
        files:
          /cmd.sh:
          /keyFile: $(keyFile)
        cmd: [ /cmd.sh ]
        envVars:
          CLOUDSDK_CORE_PROJECT: $(projectId)
          CLOUDSDK_CORE_DISABLE_PROMPTS: 1
          bgpRoutingMode:
          description:
          name:
          range:
          subnetMode:
version: 1.0.0